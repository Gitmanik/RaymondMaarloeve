name: Build Unity Game Project

on:
  push:
    branches: [ gitmanik-autobuild ]
  pull_request:
    branches: [ gitmanik-autobuild ]
  workflow_dispatch: # Allows manual triggering

jobs:
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone
          # Add other platforms as needed
          # - WebGL
          # - StandaloneLinux64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Cache Library folder
        uses: actions/cache@v4
        with:
          path: RaymondMaarloeve/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
            
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: RaymondMaarloeve
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          
      - name: Get current date and time
        id: datetime
        run: echo "::set-output name=current_datetime::$(date '+%Y-%m-%d-%H%M%S')"
        
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.datetime.outputs.current_datetime }}  # Tag in format release-YYYY-MM-DD-HHMMSS
          release_name: Release ${{ steps.datetime.outputs.current_datetime }}
          body: 'Automated release for build of ${{ matrix.targetPlatform }}'
          draft: false
          prerelease: false

      - name: Upload build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/${{ matrix.targetPlatform }}
          asset_name: Build-${{ matrix.targetPlatform }}.zip
          asset_content_type: application/zip
